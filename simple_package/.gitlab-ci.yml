# .gitlab-ci.yml
# Usage: should be in root dir of project to control gitlab cicd pipeline

stages:
  - test
  - deploy

pylint:
  stage: test
  tags:
    - 'cicd-k8s'
  image: artifactory.mtb.com/mtb-docker/mtb-ubi8-python38
  allow_failure: false
  script:
    - cd simple_package
    # Create and Setup Python environment
    - python3 -m venv testenv
    - source ./testenv/bin/activate
    - pip install pylint
    - pylint src/simplepythonpackage/add_one.py

coverage_test:
  stage: test
  tags:
    - 'cicd-k8s'
  image: artifactory.mtb.com/mtb-docker/mtb-ubi8-python38
  allow_failure: false
  script:
    - cd simple_package
    # Create and Setup Python environment
    - python3 -m venv testenv
    - source ./testenv/bin/activate
    - pip install pytest
    - pip install coverage
    - pip install -e .
    - cd tests
    - coverage run --include=../src/simplepythonpackage/add_one.py -m pytest test_add_one.py
    - coverage report -m --fail-under=100

deploy:
  stage: deploy
  tags:
    - 'cicd-k8s'
  image: artifactory.mtb.com/mtb-docker/mtb-ubi8-python38
  environment:
    name: env1
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main"'
      when: manual
  before_script:
    - cd simple_package
  script:
    # Create and Setup Python environment
    - python3 -m venv testenv
    - source ./testenv/bin/activate
    - pip install twine
#    - sleep 60
    - python setup.py sdist
    - twine upload dist/*  --config-file ./.pypirc -r local --cert ../mtb-certs.pem
